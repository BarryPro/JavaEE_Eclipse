package com.sitech.acctmgr.atom.impl.bill;

import com.sitech.acctmgr.atom.domains.account.ContractEntity;
import com.sitech.acctmgr.atom.domains.bill.BillDispDetailEntity;
import com.sitech.acctmgr.atom.domains.bill.PhoneBillEntity;
import com.sitech.acctmgr.atom.domains.user.UserInfoEntity;
import com.sitech.acctmgr.atom.dto.bill.SPhoneBillQueryInDTO;
import com.sitech.acctmgr.atom.dto.bill.SPhoneBillQueryOutDTO;
import com.sitech.acctmgr.atom.entity.inter.IAccount;
import com.sitech.acctmgr.atom.entity.inter.IBill;
import com.sitech.acctmgr.atom.entity.inter.IDelay;
import com.sitech.acctmgr.atom.entity.inter.IUser;
import com.sitech.acctmgr.common.AcctMgrBaseService;
import com.sitech.acctmgr.common.utils.DateUtils;
import com.sitech.acctmgr.inter.bill.IPhoneBill;
import com.sitech.jcfx.anno.ParamType;
import com.sitech.jcfx.anno.ParamTypes;
import com.sitech.jcfx.dt.in.InDTO;
import com.sitech.jcfx.dt.out.OutDTO;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.apache.commons.collections.MapUtils.getDouble;
import static org.apache.commons.collections.MapUtils.getInteger;
import static org.apache.commons.collections.MapUtils.safeAddToMap;

/**
 * Created by wangyla on 2016/12/23.
 */
@ParamTypes({
        @ParamType(c = SPhoneBillQueryInDTO.class, m = "query", oc = SPhoneBillQueryOutDTO.class)
})
public class SPhoneBill extends AcctMgrBaseService implements IPhoneBill {
    private IUser user;
    private IAccount account;
    private IBill bill;
    private IDelay delay;

    @Override
    public OutDTO query(InDTO inParam) {
        SPhoneBillQueryInDTO inDTO = (SPhoneBillQueryInDTO) inParam;
        log.debug("inDto=" + inDTO.getMbean());

        String phoneNo = inDTO.getPhoneNo();
        int begYm = inDTO.getBeginMonth();
        int endYm = inDTO.getEndMonth();

        UserInfoEntity userInfo = user.getUserEntityByPhoneNo(phoneNo, true);
        long idNo = userInfo.getIdNo();

        List<PhoneBillEntity> phoneBillList = new ArrayList<>();
        for (int ym = begYm; ym <= endYm; ym = DateUtils.addMonth(ym, 1)) {
            List<ContractEntity> conList = account.getConList(idNo, ym); //获取指定帐期生效的账务关系，只为了查询帐单更准确
            for (ContractEntity conEnt : conList) {
                long conTmp = conEnt.getCon();
                PhoneBillEntity phoneBillEnt = this.getPhoneBillInfo(idNo, conTmp, ym);
                phoneBillEnt.setPhoneNo(phoneNo);
                phoneBillList.add(phoneBillEnt);
            }
        }


        SPhoneBillQueryOutDTO outDTO = new SPhoneBillQueryOutDTO();
        outDTO.setBillList(phoneBillList);

        log.debug("outDto=" + outDTO.toJson());
        return outDTO;
    }

    private PhoneBillEntity getPhoneBillInfo(long idNo, long contractNo, int queryYm) {

        List<BillDispDetailEntity> billDetailList = bill.getAllBillList(idNo, contractNo, queryYm);

        long totalShould = 0;
        long totalFavour = 0;
        long totalPrepay = 0;
        long totalLater = 0;
        long totalOweFee = 0;
        long totalDelayFee = 0;

        for (BillDispDetailEntity billEnt : billDetailList) {
            totalShould += billEnt.getShouldPay();
            totalFavour += billEnt.getFavourFee();
            totalPrepay += billEnt.getPayedPrepay();
            totalLater += billEnt.getPayedLater();
            totalOweFee += billEnt.getOweFee();
        }

        if (totalOweFee > 0) {
            int billBegin = billDetailList.get(0).getBillBegin();

            Map<String, Object> inMap = new HashMap<>();
            safeAddToMap(inMap, "CONTRACT_NO", contractNo);
            Map<String, Object> delayInfo = delay.getDelayRate(inMap);
            int delayBegin = getInteger(delayInfo, "DELAY_BEGIN");
            double delayRate = getDouble(delayInfo, "DELAY_RATE");

            inMap = new HashMap<>();
            safeAddToMap(inMap, "BILL_BEGIN", billBegin);
            safeAddToMap(inMap, "OWE_FEE", totalOweFee);
            safeAddToMap(inMap, "DELAY_BEGIN", delayBegin);
            safeAddToMap(inMap, "DELAY_RATE", delayRate);
            safeAddToMap(inMap, "BILL_CYCLE", queryYm);
            safeAddToMap(inMap, "TOTAL_DATE", DateUtils.getCurDay());
            totalDelayFee = delay.getDelayFee(inMap);

        }

        PhoneBillEntity outPhoneBillEnt = new PhoneBillEntity();
        outPhoneBillEnt.setYearMonth(queryYm);
        outPhoneBillEnt.setContractNo(contractNo);
        outPhoneBillEnt.setPayedLater(totalLater);
        outPhoneBillEnt.setPayedPrepay(totalPrepay);
        outPhoneBillEnt.setShouldPay(totalShould);
        outPhoneBillEnt.setFavourFee(totalFavour);
        outPhoneBillEnt.setOweFee(totalOweFee);
        outPhoneBillEnt.setStatusName(totalOweFee > 0 ? "未缴" : "已缴");
        outPhoneBillEnt.setDelayFee(totalDelayFee);
        outPhoneBillEnt.setDetailList(billDetailList);

        return outPhoneBillEnt;
    }

    public IUser getUser() {
        return user;
    }

    public void setUser(IUser user) {
        this.user = user;
    }

    public IAccount getAccount() {
        return account;
    }

    public void setAccount(IAccount account) {
        this.account = account;
    }

    public IBill getBill() {
        return bill;
    }

    public void setBill(IBill bill) {
        this.bill = bill;
    }

    public IDelay getDelay() {
        return delay;
    }

    public void setDelay(IDelay delay) {
        this.delay = delay;
    }
}

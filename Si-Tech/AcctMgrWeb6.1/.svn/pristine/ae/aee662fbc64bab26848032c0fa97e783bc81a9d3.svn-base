package com.sitech.acctmgr.atom.impl.adj;

import com.sitech.acctmgr.atom.busi.adj.inter.IAdjCommon;
import com.sitech.acctmgr.atom.domains.adj.AdjBIllEntity;
import com.sitech.acctmgr.atom.domains.adj.AdjExtendEntity;
import com.sitech.acctmgr.atom.domains.pay.PayBookEntity;
import com.sitech.acctmgr.atom.domains.pay.PayUserBaseEntity;
import com.sitech.acctmgr.atom.domains.query.GprsChangeRecdEntity;
import com.sitech.acctmgr.atom.domains.record.LoginOprEntity;
import com.sitech.acctmgr.atom.domains.user.UserInfoEntity;
import com.sitech.acctmgr.atom.domains.user.UserPrcEntity;
import com.sitech.acctmgr.atom.dto.adj.SGivenCfmInDTO;
import com.sitech.acctmgr.atom.dto.adj.SGivenCfmOutDTO;
import com.sitech.acctmgr.atom.entity.inter.*;
import com.sitech.acctmgr.common.AcctMgrError;
import com.sitech.acctmgr.common.BaseBusi;
import com.sitech.acctmgr.common.constant.PayBusiConst;
import com.sitech.acctmgr.inter.adj.IGivenMicroPay;
import com.sitech.jcf.core.exception.BaseException;
import com.sitech.jcfx.anno.ParamType;
import com.sitech.jcfx.anno.ParamTypes;
import com.sitech.jcfx.dt.in.InDTO;
import com.sitech.jcfx.dt.out.OutDTO;
import com.sitech.jcfx.util.DateUtil;
import com.thoughtworks.xstream.mapper.Mapper;
import groovy.lang.Interceptor;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * <p>Title:  求赠赠予扣费  </p>
 * <p>Description: 此服务用于转赠类业务,类似小额支付,跟crm服务组合使用,crm负责办理资费 </p>
 * <p>Copyright: Copyright (c) 2016</p>
 * <p>Company: SI-TECH </p>
 * @author guowy
 * @version 1.0
 */

@ParamTypes({ @ParamType(m = "cfm", c = SGivenCfmInDTO.class, oc = SGivenCfmOutDTO.class)})
public class SGivenMicroPay extends BaseBusi implements IGivenMicroPay{
    IUser user;
    IBalance balance;
    IBill bill;
    IControl control;
    IAdjCommon adjCommon;
    IAdj adj;
    IRecord record;
    IProd prod;

    @Override
    public OutDTO cfm(InDTO inParam) {
        SGivenCfmInDTO inDto=(SGivenCfmInDTO)inParam;
        String phoneNo=inDto.getPhoneNo();
        long giveFee=inDto.getGiveFee();
        String pubFlag=inDto.getPubFlag();
        String serveType=inDto.getServeType();
        String foreignSn=inDto.getForeignSN();
        String gprs=inDto.getGprs();
        String marcPrc=inDto.getMarkPrc();
        String marcSn=inDto.getMarkSn();
        String remark=inDto.getRemark();
        String loginNo=inDto.getLoginNo();
        String groupId=inDto.getGroupId();
        String provinceId=inDto.getProvinceId();
        String opCode="C239";

        if("".equals(remark) || remark==null){
            remark="\"求赠+赠予\"业务办理";
        }

        if("3".equals(serveType)){
            remark=serveType+"|"+gprs+"|"+remark;
        }else{
            remark=serveType+"|"+remark;
        }

        //获取当前时间
        String curTime = DateUtil.format(new Date(), PayBusiConst.YYYYMMDDHHMMSS2);
        String yearMonth=String.format("%6s", curTime.substring(0, 6));//当前年月
        int totalDate= Integer.parseInt(String.format("%6s", curTime.substring(0, 8)));

        /*取用户的默认账户,作为小额支付账户*/
        UserInfoEntity userEnt = user.getUserInfo(phoneNo);
        Long contractNo=userEnt.getContractNo();

        /*取用户主资费*/
        //取用户主产品
        UserPrcEntity userPrcEnt = prod.getUserPrcidInfo(userEnt.getIdNo());
        String prodPrcid = userPrcEnt.getProdPrcid();

        /*校验账户预存,预存不足,不允许办理*/
        Map<String, Object> inMap = new HashMap<String, Object>();
        inMap.put("CONTRACT_NO",contractNo);
        inMap.put("PAY_ATTR4","0");
        inMap.put("SPECIAL_FLAG","1");
        Long curBalance=balance.getAcctBookSumByMap(inMap);
        if(curBalance<giveFee){
            throw new BaseException(AcctMgrError.getErrorCode("8010", "20200"),"可用预存不足,请充值后办理！!");
        }

        /*取补收流水*/
        long paySn=control.getSequence("SEQ_PAY_SN");

        /*取配置账目项*/
        String acctItemCode=control.getPubCodeValue(2418,serveType,null);

        /*取账单bill_day*/
        Map<String, Object> inAdjMap = new HashMap<String, Object>();
        inAdjMap.put("CONTRACT_NO",contractNo);
        inAdjMap.put("BILL_CYCLE",yearMonth);
        inAdjMap.put("BILL_DAY_BEGIN","7000");
        inAdjMap.put("BILL_DAY_END","7999");
        inAdjMap.put("SUFFIX",yearMonth);
        int billDay=bill.getMaxBillDay(inAdjMap);

        //用户基本信息实体设值
        PayUserBaseEntity userBase = new PayUserBaseEntity();
        userBase.setContractNo(contractNo);
        userBase.setCustId(userEnt.getCustId());
        userBase.setIdNo(userEnt.getIdNo());
        userBase.setPhoneNo(phoneNo);
        userBase.setBrandId(userEnt.getBrandId());
        userBase.setUserGroupId(userEnt.getGroupId());
        userBase.setProdPrcid(prodPrcid);

        //补收账单实体设值
        AdjBIllEntity billEnt = new AdjBIllEntity();
        billEnt.setBillCycle(Integer.parseInt(yearMonth));
        billEnt.setNaturalMonth(Integer.parseInt(yearMonth));
        billEnt.setAcctItemCode(acctItemCode);
        billEnt.setShouldPay(giveFee);
        billEnt.setBillDay(billDay);

        //入账实体设值
        PayBookEntity inBook =  new PayBookEntity();
        inBook.setGroupId(groupId);
        inBook.setLoginNo(loginNo);
        inBook.setOpCode(opCode);
        inBook.setOpNote(remark);
        inBook.setPaySn(paySn);

        //补收核心函数
        inAdjMap = new HashMap<String, Object>();
        inAdjMap.put("Header", ((SGivenCfmInDTO) inParam).getHeader());
        inAdjMap.put("PAY_BOOK_ENTITY", inBook);
        inAdjMap.put("ADJ_BILL_ENTITY", billEnt);
        inAdjMap.put("PAY_USER_BASE_ENTITY", userBase);
        inAdjMap.put("PROVINCE_ID", provinceId);

        Map<String, Object> outParamMap = adjCommon.MicroAdj(inAdjMap);

        //记录小额支付记录表bal_micropay_info
        inAdjMap = new HashMap<String, Object>();
        inAdjMap.put("PHONE_NO",phoneNo);
        inAdjMap.put("ID_NO",userEnt.getIdNo());
        inAdjMap.put("CONTRACT_NO",contractNo);
        inAdjMap.put("UNIT_CODE","");
        inAdjMap.put("BUSI_CODE",serveType);
        inAdjMap.put("INNET_CODE","");
        inAdjMap.put("OP_TYPE","given");
        inAdjMap.put("AMOUNT", gprs);
        inAdjMap.put("UNIT_PRICE","");
        inAdjMap.put("PAY_TYPE","0");
        inAdjMap.put("PAY_FEE",giveFee);
        inAdjMap.put("FOREIGN_SN",foreignSn);
        inAdjMap.put("PAY_SN",paySn);
        inAdjMap.put("ORI_PAY_SN","");
        inAdjMap.put("ORI_FOREIGN_SN","");
        inAdjMap.put("USE_FLAG","0");
        inAdjMap.put("REMARK",remark);
        inAdjMap.put("FACTOR_ONE",marcPrc);
        inAdjMap.put("FACTOR_TWO",marcSn);
        inAdjMap.put("FACTOR_THREE",pubFlag);
        inAdjMap.put("FACTOR_FOUR","");
        inAdjMap.put("FACTOR_FIVE","");
        inAdjMap.put("LOGIN_NO",loginNo);
        adj.saveMicroPayInfo(inAdjMap);

        //记录营业员操作记录表
        LoginOprEntity loginOprEnt = new LoginOprEntity();
        loginOprEnt.setBrandId(userBase.getBrandId());
        loginOprEnt.setIdNo(userBase.getIdNo());
        loginOprEnt.setLoginGroup(groupId);
        loginOprEnt.setLoginNo(loginNo);
        loginOprEnt.setLoginSn(paySn);
        loginOprEnt.setOpCode(opCode);
        loginOprEnt.setOpTime(curTime);
        loginOprEnt.setPayFee(giveFee);
        loginOprEnt.setPhoneNo(phoneNo);
        loginOprEnt.setRemark(remark);
        loginOprEnt.setPayType("0");
        loginOprEnt.setTotalDate(totalDate);
        record.saveLoginOpr(loginOprEnt);

        if(serveType.equals("3")){
            //校验营销案
            //给计费发话单
        }

        SGivenCfmOutDTO outDTO=new SGivenCfmOutDTO();
        outDTO.setPaySn(paySn);
        outDTO.setTotalDate(totalDate);
        log.info("SGivenCfmOutDTO->"+outDTO.toJson());
        return outDTO;
    }


    public IUser getUser() {
        return user;
    }

    public void setUser(IUser user) {
        this.user = user;
    }

    public IBalance getBalance() {
        return balance;
    }

    public void setBalance(IBalance balance) {
        this.balance = balance;
    }

    public IBill getBill() {
        return bill;
    }

    public void setBill(IBill bill) {
        this.bill = bill;
    }

    public IControl getControl() {
        return control;
    }

    public void setControl(IControl control) {
        this.control = control;
    }

    public IAdjCommon getAdjCommon() {
        return adjCommon;
    }

    public void setAdjCommon(IAdjCommon adjCommon) {
        this.adjCommon = adjCommon;
    }

    public IAdj getAdj() {
        return adj;
    }

    public void setAdj(IAdj adj) {
        this.adj = adj;
    }

    public IRecord getRecord() {
        return record;
    }

    public void setRecord(IRecord record) {
        this.record = record;
    }

    public IProd getProd() {
        return prod;
    }

    public void setProd(IProd prod) {
        this.prod = prod;
    }
}

package com.sitech.acctmgr.atom.impl.feeqry;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.sitech.acctmgr.atom.busi.query.inter.IRemainFee;
import com.sitech.acctmgr.atom.domains.query.ClassifyPreEntity;
import com.sitech.acctmgr.atom.domains.user.UserInfoEntity;
import com.sitech.acctmgr.atom.dto.feeqry.SClassifyPreInitInDTO;
import com.sitech.acctmgr.atom.dto.feeqry.SClassifyPreInitOutDTO;
import com.sitech.acctmgr.atom.entity.inter.IUser;
import com.sitech.acctmgr.common.AcctMgrBaseService;
import com.sitech.acctmgr.inter.feeqry.IClassifyPreQry;
import com.sitech.jcfx.anno.ParamType;
import com.sitech.jcfx.anno.ParamTypes;
import com.sitech.jcfx.dt.in.InDTO;
import com.sitech.jcfx.dt.out.OutDTO;
import com.sitech.jcfx.util.DateUtil;

@ParamTypes({ 
	@ParamType(m = "query", c = SClassifyPreInitInDTO.class, oc = SClassifyPreInitOutDTO.class)
})
public class SClassifyPreQry extends AcctMgrBaseService implements IClassifyPreQry{

	protected IUser user;
	protected IRemainFee remainfee;
	
	@Override
	public OutDTO query(InDTO inParam) {
		// TODO Auto-generated method stub
		List<ClassifyPreEntity> validList = new ArrayList<ClassifyPreEntity>();
		List<ClassifyPreEntity> willValidList = new ArrayList<ClassifyPreEntity>();
		List<ClassifyPreEntity> resultList = new ArrayList<ClassifyPreEntity>();
		SClassifyPreInitInDTO inDto = (SClassifyPreInitInDTO)inParam;
		String phoneNo = inDto.getPhoneNo();
		String payType = inDto.getPayType();
		String qryFlag = inDto.getQueryFlag();
		
		UserInfoEntity uie = user.getUserInfo(phoneNo);
		long contractNo = uie.getContractNo();
		
		//取当前时间
		long sCurTime = Long.parseLong(DateUtil.format(new Date(), "yyyyMMddHHmmss"));
		
		
		if(qryFlag.equals("1500")){
			List<ClassifyPreEntity> detailList =remainfee.getClassifyPreInfo(contractNo,null);
			for(ClassifyPreEntity cpe:detailList) {
				long sEffDate = Long.parseLong(cpe.getBeginDate());
				long sExpDate = Long.parseLong(cpe.getEndDate());
				
				if(sCurTime>=sEffDate&&sCurTime<=sExpDate) {
					validList.add(cpe);
				}else {
					willValidList.add(cpe);
				}
				
			}
			
			for(ClassifyPreEntity cpe:validList) {
				String payTypeTemp = cpe.getPayType();
				long prepayFee = cpe.getPrepayFee();
				long prepayFee1 = 0;
				int returnMonths=0;
				String returnDay = "";
				String endTime = cpe.getEndDate();
				
				for(ClassifyPreEntity cpeWill:willValidList) {
					if(payTypeTemp.equals(cpeWill.getPayType())) {
						prepayFee1 = prepayFee1+cpeWill.getPrepayFee();
						returnMonths++;
						endTime = cpeWill.getEndDate();
					}
				}
				
				prepayFee = prepayFee+prepayFee1;
				
				if(cpe.getPrepayFee()<prepayFee) {
					returnDay="1";
				}
				if(payTypeTemp.equals("T")){
					returnDay="5";
				}
				if(cpe.getPrepayFee()==prepayFee){
					returnDay="null";
				}
				
				ClassifyPreEntity cpeResult = new ClassifyPreEntity();
				cpeResult.setBeginDate(cpe.getBeginDate());
				cpeResult.setEndDate(endTime);
				cpeResult.setLeftMonths(returnMonths);
				cpeResult.setOrderCode(cpe.getOrderCode());
				cpeResult.setPayName(cpe.getPayName());
				cpeResult.setPayType(cpe.getPayType());
				cpeResult.setPrepayFee(prepayFee);
				cpeResult.setReturnDay(returnDay);
				cpeResult.setSaleFlag("未拆包");
				cpeResult.setTransFee(cpe.getTransFee());
				cpeResult.setTransFlag(cpe.getTransFlag());
								
			}
			
		}else {
			List<ClassifyPreEntity> detailList =remainfee.getClassifyPreInfo(contractNo,payType);
			for(ClassifyPreEntity cpe:detailList) {
				long sEffDate = Long.parseLong(cpe.getBeginDate());
				long sExpDate = Long.parseLong(cpe.getEndDate());
				
				if(sCurTime>=sEffDate&&sCurTime<=sExpDate) {
					validList.add(cpe);
				}else {
					willValidList.add(cpe);
				}
				
				for(ClassifyPreEntity cpeValid:validList) {
					String payTypeTemp = cpeValid.getPayType();
					long prepayFee = cpeValid.getPrepayFee();
					long prepayFee1 = 0;
					int returnMonths=0;
					String returnDay = "";
					String endTime = cpeValid.getEndDate();
					
					for(ClassifyPreEntity cpeWill:willValidList) {
						if(payTypeTemp.equals(cpeWill.getPayType())) {
							prepayFee1 = prepayFee1+cpeWill.getPrepayFee();
							returnMonths++;
						}
					}
					
					prepayFee = prepayFee+prepayFee1;
									
				}
				
				
				
			}
		}
		
		return null;
	}
	
}

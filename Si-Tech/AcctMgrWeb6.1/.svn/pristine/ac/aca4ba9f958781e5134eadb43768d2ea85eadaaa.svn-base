import com.sitech.ac.rdc.re.api.bean.ResultBean
import com.sitech.ac.rdc.re.api.common.util.MBean
import com.sitech.acctmgr.atom.domains.user.UserInfoEntity
import com.sitech.acctmgr.atom.entity.User
import com.sitech.acctmgr.atom.entity.inter.IUser
import com.sitech.common.utils.StringUtils
import com.sitech.jcf.context.LocalContextFactory

/**
 * Created by wangyla on 2016/8/22.
 */
class sEasyOwn {
    //TODO 需要补充神州行业务限制的实现逻辑
    /**
     * 功能：神州行未签约用户不允许办理业务
     * 需要入参：PHONE_NO
     * @param obj
     */
    def entryMethod (Object obj){
        MBean arg0 = obj.get("contextData");
        String phoneNo = arg0.getBodyStr("PHONE_NO");

        if (StringUtils.isNull(phoneNo)) //入参为空
        {
            ResultBean bean = new ResultBean();
            bean.setResult(false);
            bean.setReturnCode("00001");
            bean.setReturnMsg("规则校验入参PHONE_NO不能为空!");
            return bean;
        }

        IUser user = LocalContextFactory.getInstance().getBean("userEnt", User.class);
        UserInfoEntity userInfo = user.getUserEntityByPhoneNo(phoneNo, true);
        if (userInfo != null) {
            long idNo = userInfo.getIdNo();
            boolean signFlag = user.isEasyOwnSigned(idNo);
            if (!signFlag) {
                ResultBean bean = new ResultBean();
                bean.setResult(false);
                bean.setReturnCode("10111109000050008");
                bean.setReturnMsg("未签约神州行用户不能查询此业务!");
                return bean;
            }

        }
        return true;
    }

}
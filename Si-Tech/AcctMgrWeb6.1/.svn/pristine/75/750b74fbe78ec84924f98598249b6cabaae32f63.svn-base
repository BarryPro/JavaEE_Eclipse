package com.sitech.acctmgr.atom.impl.pay;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.sitech.acctmgr.atom.busi.pay.inter.IPreOrder;
import com.sitech.acctmgr.atom.domains.balance.SignPayEntity;
import com.sitech.acctmgr.atom.domains.base.ChngroupRelEntity;
import com.sitech.acctmgr.atom.domains.base.LoginEntity;
import com.sitech.acctmgr.atom.domains.record.LoginOprEntity;
import com.sitech.acctmgr.atom.domains.user.UserInfoEntity;
import com.sitech.acctmgr.atom.dto.pay.S8069CfmInDTO;
import com.sitech.acctmgr.atom.dto.pay.S8069CfmOutDTO;
import com.sitech.acctmgr.atom.entity.inter.IControl;
import com.sitech.acctmgr.atom.entity.inter.IGroup;
import com.sitech.acctmgr.atom.entity.inter.ILogin;
import com.sitech.acctmgr.atom.entity.inter.IRecord;
import com.sitech.acctmgr.atom.entity.inter.IUser;
import com.sitech.acctmgr.atom.entity.inter.IUserSign;
import com.sitech.acctmgr.common.AcctMgrBaseService;
import com.sitech.acctmgr.common.AcctMgrError;
import com.sitech.acctmgr.common.constant.PayBusiConst;
import com.sitech.acctmgr.common.utils.ValueUtils;
import com.sitech.acctmgr.inter.pay.I8069;
import com.sitech.acctmgrint.atom.busi.intface.IShortMessage;
import com.sitech.common.utils.StringUtils;
import com.sitech.jcf.core.exception.BusiException;
import com.sitech.jcfx.anno.ParamType;
import com.sitech.jcfx.anno.ParamTypes;
import com.sitech.jcfx.dt.MBean;
import com.sitech.jcfx.dt.in.InDTO;
import com.sitech.jcfx.dt.out.OutDTO;
import com.sitech.jcfx.util.DateUtil;

/**
 *
 * <p>Title: 银行卡签约用户主动缴费  </p>
 * <p>Description:   </p>
 * <p>Copyright: Copyright (c) 2014</p>
 * <p>Company: SI-TECH </p>
 * @author qiaolin
 * @version 1.0
 */
@ParamTypes({ 
	@ParamType(m="cfm",c= S8069CfmInDTO.class,oc=S8069CfmOutDTO.class, 
			routeKey ="10",routeValue = "phone_no",busiComId = "构件id", 
			srvCat = "缴费",srvCnName = "银行卡签约用户主动缴费",srvVer = "V10.8.126.0", 
			srvDesc = "银行卡签约用户主动缴费",srcAttr = "核心",srvLocal = "否",srvGroup = "否")
			})
public class S8069 extends AcctMgrBaseService implements I8069 {
	
	private ILogin 		  login;
	private IUser		  user;
	private IControl	  control;
	private IRecord		  record;
	private IUserSign	  userSign;
	private IPreOrder	  preOrder;
	private IGroup		  group;
	private IShortMessage shortMessage;
	
	/* (non-Javadoc)
	 * @see com.sitech.acctmgr.inter.pay.I8069#cfm(com.sitech.jcfx.dt.in.InDTO)
	 */
	@Override
	public OutDTO cfm(InDTO inParam) {
		
		S8069CfmInDTO inDto = (S8069CfmInDTO)inParam;
		log.info("S8069 cfm begin" + inDto.getMbean());
		if( StringUtils.isEmptyOrNull(inDto.getGroupId()) ){
			LoginEntity  loginEntity = login.getLoginInfo(inDto.getLoginNo(), inDto.getProvinceId());
			inDto.setGroupId(loginEntity.getGroupId());
		}
		
		String sCurDate = DateUtil.format(new Date(), "yyyyMMddHHmmss");
		String sCurYm = sCurDate.substring(0, 6);
		String totalDate = sCurDate.substring(0, 8);
		String time = sCurDate.substring(8, 14);
		
		//1、获取用户信息
		UserInfoEntity signUser = user.getUserInfo(inDto.getPhoneNoSign());
		UserInfoEntity payUser = user.getUserEntity(null, inDto.getPhoneNoPay(), null, true);
		
		if(!userSign.isSign(signUser.getIdNo(), PayBusiConst.SIGN_BUSI_TYPE_YHK)){
			
			log.info("用户没有办理银行卡签约业务");
			throw new BusiException(AcctMgrError.getErrorCode("8069","00001"), "该用户非银行卡签约用户" + signUser.getIdNo());
		}
		
		//2、获取签约信息
		String agreementId = getSignInfo(signUser.getIdNo());
		
		long loginAccept = control.getSequence("SEQ_PAY_SN");
		//3、调用平台接口
		//sprintf(s_RPID,"%s%06d%06d%010ld", s_SPID,i_TotalDate,i_time,l_LoginAccept%10000000000);
		String rpid =  totalDate + time + loginAccept; //需要确定拼几位
		String spid = getSpid(inDto.getLoginNo());     //渠道号ID
		MBean inBean = new MBean();
		inBean.setBody("FUNCODE", "344002");	
		inBean.setBody("MOBILENO", inDto.getPhoneNoSign());			//签约号码
		inBean.setBody("REQDATE", totalDate);
		inBean.setBody("REQTIME", time);
		inBean.setBody("RPID", rpid);
		inBean.setBody("SPID", spid);		//渠道号
		inBean.setBody("PICKUPMOBILEID", inDto.getPhoneNoPay());   //缴费号码
		inBean.setBody("AMT", inDto.getPayMoney());				//缴费金额，单位：分?
		inBean.setBody("AGREEMENTID", agreementId);
		//Map<String, String> result = CrossEntity.callService("EAI_BankCard_Pay", inBean);
		
		//4、记录交易信息
		SignPayEntity signPay = new SignPayEntity();
		signPay.setPhoneNoSign(inDto.getPhoneNoSign());
		signPay.setIdNoSign(signUser.getIdNo());
		signPay.setPhoneNoPay(inDto.getPhoneNoPay());
		signPay.setIdNoPay(payUser.getIdNo());
		signPay.setPayMoney(Long.parseLong(inDto.getPayMoney()));
		signPay.setBusiType(PayBusiConst.SIGN_BUSI_TYPE_YHK);
		signPay.setLoginNo(inDto.getLoginNo());
		signPay.setOpTime(sCurDate);
		signPay.setLoginAccept(loginAccept);
		signPay.setYearMonth(Long.parseLong(sCurYm));
		record.iSignPay(signPay);
		log.info("signPa表记录插入完成");
		
		//记录营业员操作日志
		LoginOprEntity in = new LoginOprEntity();
		in.setIdNo(signUser.getIdNo());
		in.setBrandId(signUser.getBrandId());
		in.setPhoneNo(inDto.getPhoneNoPay());
		in.setPayType("");
		in.setPayFee(Long.parseLong(inDto.getPayMoney()));
		in.setLoginSn(loginAccept);
		in.setLoginNo(inDto.getLoginNo());
		in.setLoginGroup(inDto.getGroupId());
		in.setOpCode(inDto.getOpCode());
		in.setTotalDate(Long.parseLong(totalDate));
		in.setRemark("银行卡签约用户主动缴费");
		record.saveLoginOpr(in);
		
		
		//同步CRM统一接触
		ChngroupRelEntity groupEntity = group.getRegionDistinct(signUser.getGroupId(), "2", inDto.getProvinceId());
		Map<String, Object> oprCnttMap = new HashMap<String, Object>();
		oprCnttMap.put("Header", inDto.getHeader());
		oprCnttMap.put("PAY_SN", loginAccept);
		oprCnttMap.put("LOGIN_NO", inDto.getLoginNo());
		oprCnttMap.put("GROUP_ID", inDto.getGroupId());
		oprCnttMap.put("OP_CODE", inDto.getOpCode());
		oprCnttMap.put("REGION_ID", groupEntity.getRegionCode());
		oprCnttMap.put("OP_NOTE", "银行卡签约用户主动缴费");
		oprCnttMap.put("TOTAL_FEE", Long.parseLong(inDto.getPayMoney()));
		oprCnttMap.put("CUST_ID_TYPE", "1");
		oprCnttMap.put("CUST_ID_VALUE", inDto.getPhoneNoPay());
		oprCnttMap.put("OP_TIME", sCurDate);
		preOrder.sendOprCntt(oprCnttMap);
		
		//5、发送短信
		sendpayMsg(inDto.getPhoneNoSign(), inDto.getPhoneNoPay(), Long.parseLong(inDto.getPayMoney()), inDto.getLoginNo(), inDto.getOpCode());
		
		S8069CfmOutDTO outDto = new S8069CfmOutDTO();
		outDto.setTotalDate(totalDate);
		outDto.setLoginAccept(String.valueOf(loginAccept));
		
		return outDto;
	}

	private String getSignInfo(long idNo){
		
		String agreementId = "";
		
		List<Map<String, Object>> signAddInfoList = userSign.getUserSignAddInfo(idNo, PayBusiConst.SIGN_BUSI_TYPE_YHK, null);
		for(Map<String, Object> tmpMap : signAddInfoList){
			if(tmpMap.get("FIELD_CODE").toString().equals("10020001")){
				
				agreementId = tmpMap.get("FIELD_VALUE").toString();
			}
		}
		
		return agreementId;
	}
	
	private void sendpayMsg(String phoneNoSign, String phoneNoPay, long payMoney, String loginNo, String opCode){
		
		String sCurTime = DateUtil.format(new Date(), "yyyyMMddHHmmss");
		
		Map<String, Object> mapTmp = new HashMap<String, Object>();
		Map<String, Object> mapTmp2 = new HashMap<String, Object>();
		MBean inMessage = new MBean();
		
		if(phoneNoSign.equals(phoneNoPay)){
			//BOSS_6014: 尊敬的客户，您本次使用“易充值”成功充值${pay_money}元。中国移动${sms_release}
			mapTmp.put("pay_money", ValueUtils.transFenToYuan(payMoney));
			mapTmp.put("sms_release", "");
			inMessage.addBody("TEMPLATE_ID", "311200806901");
			
		}else{
			//BOSS_6016: 尊敬的客户，您于${year}年${month}月${day}日${hour}时${minute}分，使用“易充值”成功为手机号码${phone_no}充值${pay_money}元。【中国移动】
			mapTmp.put("year", sCurTime.substring(0, 4));
			mapTmp.put("month", sCurTime.substring(4, 6));
			mapTmp.put("day", sCurTime.substring(6, 8));
			mapTmp.put("hour", sCurTime.substring(8, 10));
			mapTmp.put("minute", sCurTime.substring(10, 12));
			mapTmp.put("phone_no", phoneNoPay);
			mapTmp.put("pay_money", ValueUtils.transFenToYuan(payMoney));
			inMessage.addBody("TEMPLATE_ID", "311200806902");
			
			//BOSS_6017: 尊敬的客户，手机号码${phone_no}于${year}年${month}月${day}日${hour}时${minute}分，使用“易充值”为您充值${pay_money}元。【中国移动】
			mapTmp2.put("phone_no", phoneNoSign);
			mapTmp2.put("year", sCurTime.substring(0, 4));
			mapTmp2.put("month", sCurTime.substring(4, 6));
			mapTmp2.put("day", sCurTime.substring(6, 8));
			mapTmp2.put("hour", sCurTime.substring(8, 10));
			mapTmp2.put("minute", sCurTime.substring(10, 12));
			mapTmp2.put("pay_money", ValueUtils.transFenToYuan(payMoney));
		}
		
		inMessage.addBody("PHONE_NO", phoneNoSign);
		inMessage.addBody("LOGIN_NO", loginNo);;
		inMessage.addBody("OP_CODE", opCode);
		inMessage.addBody("CHECK_FLAG", true);
		inMessage.addBody("DATA", mapTmp);
		
		String flag = control.getPubCodeValue(2011, "DXFS", null);         // 0:直接发送 1:插入短信接口临时表 2：外系统有问题，直接不发送短信
		if(flag.equals("0")){
			inMessage.addBody("SEND_FLAG", 0);
		}else if(flag.equals("1")){
			inMessage.addBody("SEND_FLAG", 1);
		}else if(flag.equals("2")){
			return;
		}
		log.info("发送短信内容：" + inMessage.toString());
		shortMessage.sendSmsMsg(inMessage, 1);
		
		if(!phoneNoSign.equals(phoneNoPay)){
			inMessage.setBody("PHONE_NO", phoneNoPay);
			inMessage.setBody("TEMPLATE_ID", "311200806903");
			inMessage.setBody("DATA", mapTmp2);
			log.info("发送短信内容2：" + inMessage.toString());
			shortMessage.sendSmsMsg(inMessage, 1);
		}
		
	}
	
	private String getSpid(String loginNo){
		
		if(loginNo.substring(0, 6).equals("newweb")){	//网厅
			return "M0451002";
		}else if(loginNo.substring(0, 6).equals("newsms")){	//短厅
			return "Z3451001";
		}else if(loginNo.substring(0, 6).equals("186100")){	//IVR
			return "Z5451001";
		}else{
			return "Z6451000";
		}
	}
	

	public IGroup getGroup() {
		return group;
	}

	public void setGroup(IGroup group) {
		this.group = group;
	}

	public IPreOrder getPreOrder() {
		return preOrder;
	}

	public void setPreOrder(IPreOrder preOrder) {
		this.preOrder = preOrder;
	}

	public ILogin getLogin() {
		return login;
	}

	public void setLogin(ILogin login) {
		this.login = login;
	}

	public IUser getUser() {
		return user;
	}

	public void setUser(IUser user) {
		this.user = user;
	}

	public IControl getControl() {
		return control;
	}

	public void setControl(IControl control) {
		this.control = control;
	}

	public IRecord getRecord() {
		return record;
	}

	public void setRecord(IRecord record) {
		this.record = record;
	}

	public IUserSign getUserSign() {
		return userSign;
	}

	public void setUserSign(IUserSign userSign) {
		this.userSign = userSign;
	}

	public IShortMessage getShortMessage() {
		return shortMessage;
	}

	public void setShortMessage(IShortMessage shortMessage) {
		this.shortMessage = shortMessage;
	}
	
}

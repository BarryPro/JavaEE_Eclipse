package com.sitech.acctmgr.atom.impl.invoice;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.alibaba.fastjson.JSON;
import com.sitech.acctmgr.atom.domains.invoice.TaxAcctInfo;
import com.sitech.acctmgr.atom.domains.pub.PubCodeDictEntity;
import com.sitech.acctmgr.atom.dto.invoice.S8248OrderInfoCompQryOutDTO;
import com.sitech.acctmgr.atom.dto.invoice.S8248QryAcctNoOutDTO;
import com.sitech.acctmgr.atom.dto.invoice.S8248QrySecCompConOutDTO;
import com.sitech.acctmgr.atom.dto.invoice.S8248QrySecConCompInDTO;
import com.sitech.acctmgr.atom.dto.invoice.S8248SubConInvcCompInDTO;
import com.sitech.acctmgr.atom.dto.invoice.S8248SubConInvcCompOutDTO;
import com.sitech.acctmgr.atom.dto.invoice.S8248TaxInvoCompCfmBossInDTO;
import com.sitech.acctmgr.atom.dto.invoice.S8248TaxInvoCompCfmBossOutDTO;
import com.sitech.acctmgr.atom.dto.invoice.S8248TaxInvoCompQryAcctNoInDTO;
import com.sitech.acctmgr.atom.dto.invoice.S8248TaxInvoCompQryAcctNoOutDTO;
import com.sitech.acctmgr.atom.dto.invoice.S8248TaxInvoCompQryInvoInDTO;
import com.sitech.acctmgr.atom.dto.invoice.S8248TaxInvoCompQryInvoOutDTO;
import com.sitech.acctmgr.atom.entity.inter.IControl;
import com.sitech.acctmgr.common.AcctMgrError;
import com.sitech.acctmgr.inter.invoice.I8248TaxInvo;
import com.sitech.jcf.core.exception.BusiException;
import com.sitech.jcfx.anno.ParamType;
import com.sitech.jcfx.anno.ParamTypes;
import com.sitech.jcfx.dt.MBean;
import com.sitech.jcfx.dt.in.InDTO;
import com.sitech.jcfx.dt.out.OutDTO;
import com.sitech.jcfx.service.client.ServiceUtil;

/**
 *
 * <p>
 * Title:
 * </p>
 * <p>
 * Description:
 * </p>
 * <p>
 * Copyright: Copyright (c) 2014
 * </p>
 * <p>
 * Company: SI-TECH
 * </p>
 * 
 * @author wangxind
 * @version 1.0
 */
@ParamTypes({ @ParamType(c = S8248TaxInvoCompQryAcctNoInDTO.class, m = "qryAcctNo", oc = S8248TaxInvoCompQryAcctNoOutDTO.class),
		@ParamType(c = S8248TaxInvoCompQryInvoInDTO.class, m = "qryInvo", oc = S8248TaxInvoCompQryInvoOutDTO.class),
		@ParamType(c = S8248TaxInvoCompCfmBossInDTO.class, m = "cfmBoss", oc = S8248TaxInvoCompCfmBossOutDTO.class),
		@ParamType(c = S8248QrySecConCompInDTO.class, m = "qryAcctNoRel", oc = S8248QrySecCompConOutDTO.class),
		@ParamType(c = S8248SubConInvcCompInDTO.class, m = "getSubConInvc", oc = S8248SubConInvcCompOutDTO.class) })
public class S8248TaxInvoComp implements I8248TaxInvo {

	protected Logger log = LoggerFactory.getLogger(this.getClass());
	private final double addTaxRate = 0.06;
	// 11税率
	private final double telTaxRate = 0.11;

	private final double crmTaxRate = 0.17;
	private IControl control;

	@Override
	public OutDTO qryAcctNo(InDTO inParam) {

		S8248TaxInvoCompQryAcctNoInDTO inArg = (S8248TaxInvoCompQryAcctNoInDTO) inParam;
		S8248TaxInvoCompQryAcctNoOutDTO outArg = new S8248TaxInvoCompQryAcctNoOutDTO();

		String sPhoneNo = inArg.getPhoneNo();

		String outStr = "";
		/* 依次查询大区 */
		String interfaceName = "com_sitech_acctmgr_inter_invoice_I8248TaxInvoAoSvc_qryAcctNo";
		/* 入参报文 */
		MBean inPubInfo = new MBean();
		inPubInfo.setHeader(inArg.getHeader());
		inPubInfo.addBody("BUSI_INFO.PHONE_NO", sPhoneNo);
		inPubInfo.addBody("BUSI_INFO.QRY_TYPE", "" + inArg.getQryType());
		inPubInfo.addBody("BUSI_INFO.BEGIN_YM", inArg.getBeginYm() + "");
		inPubInfo.addBody("BUSI_INFO.END_YM", inArg.getEndYm() + "");
		inPubInfo.addBody("BUSI_INFO.CONTRACT_NO", "" + inArg.getContractNo());
		inPubInfo.addBody("BUSI_INFO.TAX_PAYER_ID", "" + inArg.getTaxPayerId());
		inPubInfo.addBody("OPR_INFO.GROUP_ID", inArg.getGroupId());
		inPubInfo.addBody("OPR_INFO.LOGIN_NO", inArg.getLoginNo());
		inPubInfo.addBody("OPR_INFO.OP_CODE", inArg.getOpCode());

		outStr = ServiceUtil.callService(interfaceName, inPubInfo);

		MBean mb = new MBean(outStr);
		String jsonStr = JSON.toJSONString(mb.getBodyObject("OUT_DATA"));

		S8248QryAcctNoOutDTO qryout = JSON.parseObject(jsonStr, S8248QryAcctNoOutDTO.class);// new S8248QryAcctNoOutDTO(outStr);

		List<TaxAcctInfo> acctInfo = qryout.getAcctInfo();

		/* 判断账户数 */
		if (acctInfo.size() == 0) {
			throw new BusiException(AcctMgrError.getErrorCode("8248", "01014"), "没有具有资质的付费关系账户！");
		}

		outArg.setAcctInfo(acctInfo);

		return outArg;
	}

	/* (non-Javadoc)
	 * 
	 * @see com.sitech.acctmgr.inter.invoice.I8248TaxInvo#qryInvo(com.sitech.jcfx.dt.in.InDTO) */
	@Override
	public OutDTO qryInvo(InDTO inParam) {

		S8248TaxInvoCompQryInvoInDTO inArg = (S8248TaxInvoCompQryInvoInDTO) inParam;
		S8248TaxInvoCompQryInvoOutDTO outArg = new S8248TaxInvoCompQryInvoOutDTO();
		int domain = inArg.getDomain();
		switch (domain) {
		case 1:
			// BOSS业务
			String outStr = "";
			String interfaceName = "com_sitech_acctmgr_inter_invoice_I8248TaxInvoAoSvc_qryInvo";
			// String interfaceNameOne = "com_sitech_acctmgr_inter_invoice_I8248TaxInvoAoSvc_qryInvNoForOnePay";
			MBean inPubInfo = new MBean();
			inPubInfo.setHeader(inArg.getHeader());
			inPubInfo.addBody("BUSI_INFO.BEGIN_MON", "" + inArg.getBeginMon());
			inPubInfo.addBody("BUSI_INFO.END_MON", "" + inArg.getEndMon());
			inPubInfo.setBody("BUSI_INFO.CONTRACT_NO", "" + inArg.getContractNo());
			inPubInfo.addBody("OPR_INFO.GROUP_ID", inArg.getGroupId());
			inPubInfo.addBody("OPR_INFO.LOGIN_NO", inArg.getLoginNo());
			inPubInfo.addBody("OPR_INFO.OP_CODE", inArg.getOpCode());
			outStr = ServiceUtil.callService(interfaceName, inPubInfo);
			MBean mb = new MBean(outStr);
			String jsonStr = JSON.toJSONString(mb.getBodyObject("OUT_DATA"));
			outArg = (S8248TaxInvoCompQryInvoOutDTO) JSON.parseObject(jsonStr, S8248TaxInvoCompQryInvoOutDTO.class);
			break;
		case 2:
			// Crm接口1
			S8248OrderInfoCompQryOutDTO crmInfo = null;
			String crminterfaceName = "com_sitech_crm_order_inter_service_billManageService_queryOrdInvc";
			MBean crminPubInfo = new MBean();
			crminPubInfo.setHeader(inArg.getHeader());
			crminPubInfo.addBody("SERVICE_NO", inArg.getPhoneNo());
			crminPubInfo.addBody("CUST_ID", "");
			crminPubInfo.addBody("ID_ICCID", "");
			crminPubInfo.addBody("START_TIME", inArg.getBeginMon());
			crminPubInfo.addBody("END_TIME", inArg.getEndMon());
			// log.info("crminPubInfo==="+crminPubInfo);
			String crmoutStr = ServiceUtil.callService(crminterfaceName, crminPubInfo);
			// String crmoutStr =
			// "{    \"ROOT\": {        \"BODY\": {            \"OUT_DATA\": {                \"ORDER_INFO\": [                    {                        \"OP_CODE\": \"4602\",                        \"TAX_LIST\": [                            {                                \"FEE_CODE\": \"Y200\",                                \"MADE_PRICE\": \"0\",                                \"RESOURCE_UNIT\": \"\",                                \"FEE_CODE_SEQ\": \"0\",                                \"RESOURCE_NUM\": \"\",                                \"TAX_FEE\": \"1100\",                                \"RESOURCE_NAME\": \"\",                                \"SHOULD_PAY\": 3800,                                \"RESOURCE_MODEL\": \"\",                                \"TAX_SHOULD\": \"0\",                                \"FEE_TYPE\": \"0\",                                \"BUY_PRICE\": \"0\",                                \"MORE_FEE\": \"0\",                                \"TAX_RATE\": \"0.06\",                                \"FEE_ACCEPT\": \"L15081200000199\"                            }                        ],                        \"ORDER_ID\": \"O15081200000189\",                        \"SUFFIX\": \"201501\",                        \"OP_NAME\": \"营销执行\",                        \"SERVICE_NO\": \"18743490114\"                    }                ]            },            \"RETURN_CODE\": \"0\",            \"RETURN_MSG\": \"OK\",            \"USER_MSG\": \"OK\",            \"DETAIL_MSG\": \"OK\",            \"PROMPT_MSG\": \"OK\"        }    }}";
			// Log.info("crmoutStr================"+crmoutStr);
			MBean crmmb = new MBean(crmoutStr);
			String crmjsonStr = JSON.toJSONString(crmmb.getBodyObject("OUT_DATA"));
			// Log.info("crmjsonStr========="+crmjsonStr);
			crmInfo = JSON.parseObject(crmjsonStr, S8248OrderInfoCompQryOutDTO.class);

			// 获取名称
			// interfaceName = "com_sitech_acctmgr_inter_adj_IPubCodeAoSvc_getPubInfo";
			// inPubInfo = new MBean();
			// inPubInfo.setHeader(inArg.getHeader());
			// inPubInfo.addBody("BUSI_INFO.CODE_CLASS", "105");
			// outStr = ServiceUtil.callService(interfaceName, inPubInfo);
			// mb = new MBean(outStr);
			// jsonStr = JSON.toJSONString(mb.getBodyObject("OUT_DATA"));
			// SPubCodeOutDTO pubdto = JSON.parseObject(jsonStr, SPubCodeOutDTO.class);// new S8248QryAcctNoOutDTO(outStr);
			// List<Map<String, Object>> pudlist = pubdto.getListBackType();
			List<PubCodeDictEntity> pubCodeList = control.getPubCodeList(105l, "", "", "");
			// outArg = (S8248TaxInvoCompQryInvoOutDTO) getCrmOrderInfo(crmInfo, inArg.getBeginMon(), inArg.getEndMon(), pubCodeList, 10000000);
			break;
		default:
			break;
		}
		return outArg;
	}

	/* (non-Javadoc)
	 * 
	 * @see com.sitech.acctmgr.inter.invoice.I8248TaxInvo#cfmBoss(com.sitech.jcfx.dt.in.InDTO) */
	@Override
	public OutDTO cfmBoss(InDTO inParam) {

		S8248TaxInvoCompCfmBossInDTO inArg = (S8248TaxInvoCompCfmBossInDTO) inParam;
		S8248TaxInvoCompCfmBossOutDTO outArg = new S8248TaxInvoCompCfmBossOutDTO();

		return null;
	}

	@Override
	public OutDTO qryCrmQry(InDTO inParam) {

		return null;

	}

	public IControl getControl() {
		return control;
	}

	public void setControl(IControl control) {
		this.control = control;
	}


}

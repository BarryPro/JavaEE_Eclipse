
		function Business(){
		}
		
		Business.prototype.setBusitype = function(busitype){
			this.busitype = busitype;
		};
		Business.prototype.getBusitype = function(){
			return this.busitype;
		};
		Business.prototype.setBusinessId = function(businessId){
			this.business_id = businessId;
		};
		Business.prototype.getBusinessId = function(){
			return this.business_id;
		};
		
		Business.prototype.setOfferId = function(offerId){
			this.newofferid = offerId;
		};
		Business.prototype.getOfferId = function(){
			return this.newofferid;
		};
		
		Business.prototype.setBeginTime = function(beginTime){
			this.begin_time = beginTime;
		}
		Business.prototype.getBeginTime = function(){
			return this.begin_time;
		};
		Business.prototype.setEndTime = function(endTime){
			this.end_time = endTime;
		}
		Business.prototype.getEndTime = function(){
			return this.end_time;
		};
		Business.prototype.setPropName = function(propName){
			this.prop_name = propName;
		}
		Business.prototype.getPropName = function(){
			return this.prop_name;
		};
		Business.prototype.setPropSex = function(propSex){
			this.prop_sex = propSex;
		}
		Business.prototype.getPropSex = function(){
			return this.prop_sex;
		};
		Business.prototype.setPropBirthday = function(propBirthday){
			this.prop_birthday = propBirthday;
		}
		Business.prototype.getPropBirthday = function(){
			return this.prop_birthday;
		};
		Business.prototype.setPropCardNo = function(prodCardNo){
			this.prop_cardno = prodCardNo;
		}
		Business.prototype.getPropCardNo = function(){
			return this.prop_cardno;
		};
		Business.prototype.setPropDistrict = function(propDistrict){
			this.prop_district = propDistrict;
		}
		Business.prototype.getPropDistrict = function(){
			return this.prop_district;
		};
		Business.prototype.setPropAddress = function(propAddress){
			this.prop_address = propAddress;
		}
		Business.prototype.getPropAddress = function(){
			return this.prop_address;
		};
		Business.prototype.setPropTelephone = function(propTelephone){
			this.prop_tel = propTelephone;
		}
		Business.prototype.getPropTelephone = function(){
			return this.prop_tel;
		};
		Business.prototype.setUserAccounts = function(userAccounts){
			this.user_accounts = userAccounts;
		}
		Business.prototype.getUserAccounts = function(){
			return this.user_accounts;
		};
		Business.prototype.setPropCommunity = function(propCommunity){
			this.prop_community = propCommunity;
		}
		Business.prototype.getPropCommunity = function(){
			return this.prop_community;
		};
		Business.prototype.setOper = function(oper){
			this.oper = oper;
		}
		Business.prototype.getOper = function(){
			return this.oper;
		};
		Business.prototype.setSale_type = function(sale_type){
			this.sale_type = sale_type;
		}
		Business.prototype.getSale_type = function(){
			return this.sale_type;
		};
		Business.prototype.setSale_flag = function(sale_flag){
			this.sale_flag = sale_flag;
		}
		Business.prototype.getSale_flag = function(){
			return this.sale_flag;
		};
		Business.prototype.setSale_code = function(sale_code){
			this.sale_code = sale_code;
		}
		Business.prototype.getSale_code = function(){
			return this.sale_code;
		};
		Business.prototype.setImei = function(imei){
			this.imei = imei;
		}
		Business.prototype.getImei = function(){
			return this.imei;
		};
		Business.prototype.setBrand_name = function(brand_name){
			this.brand_name = brand_name;
		}
		Business.prototype.getBrand_name = function(){
			return this.brand_name;
		};
		Business.prototype.setRes_name = function(res_name){
			this.res_name = res_name;
		}
		Business.prototype.getRes_name = function(){
			return this.res_name;
		};
		Business.prototype.setPrepay_fee = function(prepay_fee){
			this.prepay_fee = prepay_fee;
		}
		Business.prototype.getPrepay_fee = function(){
			return this.prepay_fee;
		};
		Business.prototype.setConsume_term = function(consume_term){
			this.consume_term = consume_term;
		}
		Business.prototype.getConsume_term = function(){
			return this.consume_term;
		};
		Business.prototype.setMach_fee = function(mach_fee){
			this.mach_fee = mach_fee;
		}
		Business.prototype.getMach_fee = function(){
			return this.mach_fee;
		};
		
		function FamRole(){
			this.length = 0;
			this.businesses = [];
		}
		FamRole.prototype.setPhone = function(phone){
			this.phone_no_subordinate = phone;
		};
		FamRole.prototype.getPhone = function(){
			return this.phone_no_subordinate;
		};
		
		FamRole.prototype.setRoleId = function(roleId){
			this.family_role = roleId;
		};
		FamRole.prototype.getRoleId = function(){
			return this.family_role;
		};
		
		FamRole.prototype.setRoleName = function(roleName){
			this.family_role_name = roleName;
		};
		FamRole.prototype.getRoleName = function(){
			return this.family_role_name;
		};
		
		FamRole.prototype.setMembId = function(membId){
			this.member_role_id = membId;
		};
		FamRole.prototype.getMembId = function(){
			return this.member_role_id;
		};
		
		FamRole.prototype.setPay_type = function(pay_type){
			this.pay_type = pay_type;
		};
		FamRole.prototype.getPay_type = function(){
			return this.pay_type;
		};
		
		FamRole.prototype.getLength = function(){
			return this.length;
		};
		FamRole.prototype.getBusiness = function(i)
		{ 
			 return this.businesses[i];
		}
		
		FamRole.prototype.equals = function(){
			if(FamRole.getPhone() == this.getPhone()){
				return true;
			}
			return false;
		};
		FamRole.prototype.addBusiness = function(business){
			this.businesses[this.length++] = business;
		};
		
		function FamRoleList(){
			this.length = 0;
			this.famRoles = [];
		}
		FamRoleList.prototype.addFamRole = function(famRole){
			this.famRoles[this.length++] = famRole;
		}
		FamRoleList.prototype.deleteFamRole = function (i){
			this.famRoles.splice(i,1);
			this.length--;
		}
		FamRoleList.prototype.getFamRole = function(i){
			return this.famRoles[i];
		}
		FamRoleList.prototype.getLength = function(){
			return this.length;
		};
		FamRoleList.prototype.setCreate_accept = function(creat_accept){
			this.create_accept = creat_accept;
		};
		FamRoleList.prototype.getCreate_accept = function(){
			return this.create_accept;
		};
		FamRoleList.prototype.setBack_accept = function(back_accept){
			this.back_accept = back_accept;
		};
		FamRoleList.prototype.getBack_accept = function(){
			return this.back_accept;
		};
		
		FamRoleList.prototype.setChnsource = function(chnsource){
			this.chnsource = chnsource;
		};
		FamRoleList.prototype.getChnsource = function(){
			return this.chnsource;
		};
		FamRoleList.prototype.setopCode = function(opCode){
			this.opCode = opCode;
		};
		FamRoleList.prototype.getopCode = function(){
			return this.opCode;
		};
		FamRoleList.prototype.setLoginNo = function(loginNo){
			this.loginNo = loginNo;
		};
		FamRoleList.prototype.getLoginNo = function(){
			return this.loginNo;
		};
		FamRoleList.prototype.setPassword = function(password){
			this.password = password;
		};
		FamRoleList.prototype.getPassword = function(){
			return this.password;
		};
		FamRoleList.prototype.setPhone_no_master = function(phone_no_master){
			this.phone_no_master = phone_no_master;
		};
		FamRoleList.prototype.getPhone_no_master = function(){
			return this.phone_no_master;
		};
		FamRoleList.prototype.setOp_note = function(op_note){
			this.op_note = op_note;
		};
		FamRoleList.prototype.getOp_note = function(){
			return this.op_note;
		};
		FamRoleList.prototype.setProd_code = function(prod_code){
			this.prod_code = prod_code;
		};
		FamRoleList.prototype.getProd_code = function(){
			return this.prod_code;
		};
		FamRoleList.prototype.setFamily_code = function(family_code){
			this.family_code = family_code;
		};
		FamRoleList.prototype.getFamily_code = function(){
			return this.family_code;
		};
		FamRoleList.prototype.setPay_money = function(pay_money){
			this.pay_money = pay_money;
		}
		FamRoleList.prototype.getPay_money = function(){
			return this.pay_money;
		};
		
		//
		/*
		mainOfferArray存储的是对象
		对象例如 ：
					  {
					  	name : code--资费1
					  	code : code
					  	comment: 资费1描述
						}
		*/
		var mainOfferArray = [];
		
	//FamRoleList.prototype.memberPhoneList = new Array(); //成员手机号列表
	/*	
		function FamOffer() {
			this.mainOfferName = '';
			this.mainOfferCmt = '';
			this.minorOfferName = '';
			this.minorOfferCmt = '';
		}
		FamOffer.prototype.setMainOfferName = function(mainOfferName) {
			this.mainOfferName = mainOfferName;
		}
		FamOffer.prototype.getMainOfferName = function() {
			return this.mainOfferName;
		}
		FamOffer.prototype.setMainOfferCmt = function(mainOfferCmt) {
			this.mainOfferCmt = mainOfferCmt;
		}
		FamOffer.prototype.getMainOfferCmt = function() {
			return this.mainOfferCmt;
		}
		FamOffer.prototype.setMinorOfferName = function(minorOfferName) {
			this.minorOfferName = minorOfferName;
		}
		FamOffer.prototype.getMainOfferName = function() {
			return this.minorOfferName;
		}
		FamOffer.prototype.setMinorOfferCmt = function(minorOfferCmt) {
			this.minorOfferCmt = minorOfferCmt;
		}
		FamOffer.prototype.getMainOfferCmt = function() {
			return this.minorOfferCmt;
		}
		
		FamOffer.prototype.getOfferName(opCode) {
			if(opCode == 'e281') {
			  var nameArr = new Array();
			  nameArr.push(this.mainOfferName);
			  if(this.minorOfferName != null && this.minorOfferName.length > 0) {
			  	nameArr.push(this.minorOfferName);	
			  }
			  return nameArr;
			}
			else if(opCode == 'e282' || opCode == 'e283') {
				return this.minorOfferName;	
			}else if(opCode == 'e284' || opCode == 'e285') {
			  return this.mainOfferName;	
			}
		}
		*/
		function printCommit(opCode){
			var ret = showPrtDlg(opCode,"确实要进行电子免填单打印吗？","Yes");
			if(typeof(ret)!="undefined"){
				if((ret=="confirm")){
					if(rdShowConfirmDialog('确认电子免填单吗？')==1){
						frmCfm();
					}
				}
				if(ret=="continueSub"){
					if(rdShowConfirmDialog('确认要提交信息吗？')==1){
						frmCfm();
					}
				}
			}
			else{
				if(rdShowConfirmDialog('确认要提交信息吗？')==1){
					frmCfm();
				}
			}
			return true;
		}
		function frmCfm(){
			showLightBox();
			form1.action="fe280Cfm.jsp";
			form1.submit();
		}
		function showPrtDlg(opcode,DlgMessage,submitCfm){
			//显示打印对话框
			var h=180;
			var w=350;
			var t=screen.availHeight/2-h/2;
			var l=screen.availWidth/2-w/2;
			
			var pType="subprint";             				 		//打印类型：print 打印 subprint 合并打印
			var billType="1";              				 			  //票价类型：1电子免填单、2发票、3收据
			var sysAccept =$("#printAccept").val();       //流水号
			var printStr = printInfo(opcode);			 		//调用printinfo()返回的打印内容
			var mode_code=null;           							  //资费代码
			var fav_code=null;                				 		//特服代码
			var area_code=null;             				 		  //小区代码
			var opCode=$("#opCode").val();                   	//操作代码
			var phoneNo = $("#parentPhone").val();         //客户电话
			var prop="dialogHeight:"+h+"px; dialogWidth:"+w+"px; dialogLeft:"+l+"px; dialogTop:"+t+
				"px;toolbar:no; menubar:no; scrollbars:yes; resizable:no;location:no;status:no;help:no";
			var path = $("#reqContextPath").val() + "/npage/innet/hljBillPrint_jc.jsp?DlgMsg=" + DlgMessage ;
			path += "&mode_code="+mode_code+
				"&fav_code="+fav_code+"&area_code="+area_code+
				"&opCode="+opCode+"&sysAccept="+sysAccept+
				"&phoneNo="+phoneNo+
				"&submitCfm="+submitCfm+"&pType="+
				pType+"&billType="+billType+ "&printInfo=" + printStr;
			var ret=window.showModalDialog(path,printStr,prop);
			return ret;
		}
		function printInfo(opcode){
			/*liujian  区别各个角色的成员Id*/
			var parent_member_Id = '70001'; //宜居通家长
			var normal_member_Id = '70002'; //普通成员
			var other_member_Id = '70004';  //其他成员
			var offerName = ''; //指定资费名称
			var offerComment = '';//指定资费描述
			var normalMemberStr = getPhoneNoByMemberId(normal_member_Id);
			var otherMemberStr = getPhoneNoByMemberId(other_member_Id);
			var mainOfferNameVal = $("#mainOfferName").val(); //系统资费名称
			var mainOfferCommentVal = $("#mainOfferComment").val().trim(); //系统资费描述
			var minorOfferNameVal = $("#minorOfferName").val(); //其他成员资费名称
			var minorOfferCommentVal = $("#minorOfferComment").val().trim();//其他成员资费描述
			var cust_info="";
			var opr_info="";
			var note_info1="";
			var note_info2="";
			var note_info3="";
			var note_info4="";
			
			var retInfo = "";
			
			
			
			/************客户信息************/
			cust_info += "手机号码：" + $("#operPhoneNo").val() + "|";
			cust_info += "客户姓名："+$("#custName").val()+"|";
			/************受理内容************/
			opr_info += "用户品牌：" + $("#smName").val() + "  办理业务：" + $("#printName").val()+"|";
			opr_info += "操作流水："+$("#printAccept").val() + "  业务操作时间：" + $("#cccTime").val() +"|";
			opr_info += getHomeEasyPrintInfo() + "|";
			opr_info += "家庭宜居通固话号码：" + $("#parentPhone").val() + "|";
			/*liujian add 对业务分情况*/
			/*
				不同业务展示的免填单的指定资费不同
				幸福家庭成员业务退订：普通成员的资费    对应的opcode=e283
				幸福家庭业务退订    ：宜居通家长的资费  对应的opcode=e284
				幸福家庭签约送礼冲正：宜居通家长的资费  对应的opcode=e285
			*/
			var opr_info_temp = '';
			var note_info1_temp = '';
			switch(opcode) {
				case 'e281' : 
					if(normalMemberStr != null && normalMemberStr.length > 0) {
						opr_info += "家庭必选成员手机号码：" + normalMemberStr + "|";
					}
					if(otherMemberStr != null && otherMemberStr.length > 0) {
						opr_info += "家庭可选成员手机号码：" + otherMemberStr + "|";
					}
					/*设定指定资费*/
					if(mainOfferNameVal.length > 0){
						offerName = mainOfferNameVal;
					}
					if(mainOfferCommentVal.length > 0){
						offerComment = mainOfferCommentVal;
					}
					/*只有创建时展示可选成员办理资费*/
					if($.trim(otherMemberStr) != '' && otherMemberStr != null && minorOfferNameVal.length > 0){
						opr_info_temp = "可选成员办理资费：" + minorOfferNameVal + "|";
						note_info1_temp = "可选成员办理的资费描述：" + minorOfferCommentVal + "|";
					}
					break;
				case 'e282' :
					/*
					//需求变化，只要新添加的号码
					//融合所有的成员号码
					if(memberPhoneList.length > 0) {
						otherMemberStr = memberPhoneList.join(',') + "," + otherMemberStr;
					}
					*/
					opr_info += "本次加入家庭的可选成员手机号码：" + otherMemberStr + "|";
					if(minorOfferNameVal.length > 0){
						offerName = minorOfferNameVal;
					}
					if(minorOfferCommentVal.length > 0){
						offerComment = minorOfferCommentVal;
					}
					break;
				case 'e283' :
					opr_info += "本次退出家庭的成员手机号码：" + otherMemberStr + "|";
					if(minorOfferNameVal.length > 0){
						offerName = minorOfferNameVal;
					}
					if(minorOfferCommentVal.length > 0){
						offerComment = minorOfferCommentVal;
					}
					break;
				case 'e284' :	
					var tempMember = normalMemberStr;
					if(otherMemberStr.length >0) {
						tempMember = normalMemberStr + "," + otherMemberStr;
					}
					opr_info += "家庭成员手机号码：" + tempMember + "|";
					if(mainOfferNameVal.length > 0){
						offerName = mainOfferNameVal;
					}
					if(mainOfferCommentVal.length > 0){
						offerComment = mainOfferCommentVal;
					}
					break;
				case 'e285' :	
					if(normalMemberStr != null && normalMemberStr.length > 0) {
						opr_info += "家庭必选成员手机号码：" + normalMemberStr + "|";
					}
					if(otherMemberStr != null && otherMemberStr.length > 0) {
						opr_info += "家庭可选成员手机号码：" + otherMemberStr + "|";
					}
					/*设定指定资费*/
					if(mainOfferNameVal.length > 0){
						offerName = mainOfferNameVal;
					}
					if(mainOfferCommentVal.length > 0){
						offerComment = mainOfferCommentVal;
					}
					break;
			}
			/*
			if(opcode == 'e281' || opcode == 'e285') {
				if(normalMemberStr != null && normalMemberStr.length > 0) {
					opr_info += "家庭必选成员手机号码：" + normalMemberStr + "|";
				}
				if(otherMemberStr != null && otherMemberStr.length > 0) {
					opr_info += "家庭可选成员手机号码：" + otherMemberStr + "|";
				}
				//设定指定资费
				if(mainOfferNameVal.length > 0){
					offerName = mainOfferNameVal;
				}
				if(mainOfferCommentVal.length > 0){
					offerComment = mainOfferCommentVal;
				}
				//只有创建时展示可选成员办理资费
				if(opcode == 'e281' && $.trim(otherMemberStr) != '' && otherMemberStr != null && minorOfferNameVal.length > 0){
					opr_info_temp = "可选成员办理资费：" + minorOfferNameVal + "|";
					note_info1_temp = "可选成员办理的资费描述：" + minorOfferCommentVal + "|";
				}
			}else if(opcode == 'e282') {
				//融合所有的成员号码
				if(memberPhoneList.length > 0) {
					otherMemberStr = memberPhoneList.join(',') + "," + otherMemberStr;
				}
				opr_info += "家庭可选成员手机号码：" + otherMemberStr + "|";
				if(minorOfferNameVal.length > 0){
					offerName = minorOfferNameVal;
				}
				if(minorOfferCommentVal.length > 0){
					offerComment = minorOfferCommentVal;
				}
			}else if(opcode == 'e283') {
				opr_info += "本次退出家庭的成员手机号码：" + otherMemberStr + "|";
				if(minorOfferNameVal.length > 0){
					offerName = minorOfferNameVal;
				}
				if(minorOfferCommentVal.length > 0){
					offerComment = minorOfferCommentVal;
				}
			}else if(opcode == 'e284') {
				var tempMember = normalMemberStr;
				if(otherMemberStr.length >0) {
					tempMember = normalMemberStr + "," + otherMemberStr;
				}
				opr_info += "家庭成员手机号码：" + tempMember + "|";
				if(mainOfferNameVal.length > 0){
					offerName = mainOfferNameVal;
				}
				if(mainOfferCommentVal.length > 0){
					offerComment = mainOfferCommentVal;
				}
			}
			*/
			if(offerName.length > 0){
				opr_info += "指定资费：" + offerName + "|";
			}
			opr_info += opr_info_temp;
			/************注意事项************/
			note_info1 += "备注：" + "|";
			if(offerComment.length > 0){
				note_info1 += "指定资费描述：" + offerComment + "|";
			}
			note_info1 += note_info1_temp;
			note_info1 += "注意事项：" + "|";
			note_info1 += getNote();
			retInfo = strcat(cust_info,opr_info,note_info1,note_info2,note_info3,note_info4);
			retInfo=retInfo.replace(new RegExp("#","gm"),"%23");
			return retInfo;
		}
		
		//TODO 可以删掉此方法
		function getPhoneNoByRole(roleId){
			/* 根据memberRoleId获取手机号 */
			var returnStr = "";
			var roleObj;
			
			for(var i = 0; i < familyRoleList.getLength(); i++){
				roleObj = familyRoleList.getFamRole(i);
				if(roleObj.getRoleId() == roleId && roleObj.getMembId() != "70001"){
					returnStr = returnStr + roleObj.getPhone() + ",";
				}
			}
			if(returnStr != ""){
				returnStr = returnStr.substring(0,returnStr.length-1);
			}
			return returnStr;
		}

		/*liujian 通过成员Id获取手机号*/
		function getPhoneNoByMemberId(MemberId){
			/* 根据memberId获取手机号 */
			var returnStr = "";
			var roleObj;
			
			for(var i = 0; i < familyRoleList.getLength(); i++){
				roleObj = familyRoleList.getFamRole(i);
				if(roleObj.getMembId() == MemberId ){
					returnStr = returnStr + roleObj.getPhone() + ",";
				}
			}
			if(returnStr != ""){
				returnStr = returnStr.substring(0,returnStr.length-1);
			}
			return returnStr;
		}
		
		
		function getHomeEasyPrintInfo(){
			var prepayfee;
			var consumeTerm;
			var returnEachMon;
			var returnStr = " ";
			var roleObj;
			var businessObj;
			for(var i = 0; i < familyRoleList.getLength(); i++){
				roleObj = familyRoleList.getFamRole(i);
				for(var j = 0; j < roleObj.getLength(); j++){
					businessObj = roleObj.getBusiness(j);
					if(businessObj.getBusitype() == "YX"){
						prepayfee = businessObj.getPrepay_fee();
						consumeTerm = businessObj.getConsume_term();
						returnEachMon = prepayfee / consumeTerm;
						returnStr +=  "预存话费：" + prepayfee + "元  礼品名称：宜居通终端一部   月底线：" + returnEachMon + "元 预存款期限："+consumeTerm+"个月";
					}
				}
			}
			return returnStr;
		}
		function getBusiByOpcode(){
			var returnStr = " ";
			var opCodeVal = $("#opCode").val();
			if(opCodeVal == "e283"){
				returnStr = "成功办理退订幸福家庭套餐，自次月起将不再享受家庭套餐优惠业务，同时主副卡的代付费关系将取消。";
			}else if(opCodeVal == "e284"){
				returnStr = "移动手机号码退订幸福家庭套餐后，自次月起将按照不再享受家庭内业务优惠资费，同时家庭内统一缴、付费关系将解除。";
			}
			return returnStr;
		}


<%@ page import="java.security.*" %>
<%@ page import="javax.crypto.*;" %>
<%@ page import="java.util.*" %>
<%!
//////以下方法用户加密渠道信息
//Add by Mumu Lee at 20060627 begin
private String getHostE(String host){
	if (host==null || "".equals(host)){
		return "";
	}
	try{
		Cipher encryptCipher = null;
		String strDefaultKey = "MumuLee";
		//Security.addProvider(new com.sun.crypto.provider.SunJCE());
		Key key = getKey(strDefaultKey.getBytes());

		encryptCipher = Cipher.getInstance("DES");
		encryptCipher.init(Cipher.ENCRYPT_MODE, key);

		return byteArr2HexStr(encryptCipher.doFinal(host.getBytes()));
	}
	catch(Exception e){
		e.printStackTrace();
		return "";
	}
}

private static String byteArr2HexStr(byte[] arrB) throws Exception {
	int iLen = arrB.length;
	//每个byte用两个字符才能表示，所以字符串的长度是数组长度的两倍
	StringBuffer sb = new StringBuffer(iLen * 2);
	for (int i = 0; i < iLen; i++) {
		int intTmp = arrB[i];
		//把负数转换为正数
		while (intTmp < 0) {
			intTmp = intTmp + 256;
		}
		//小于0F的数需要在前面补0
		if (intTmp < 16) {
			sb.append("0");
		}
		sb.append(Integer.toString(intTmp, 16));
	}
	return sb.toString();
}

private Key getKey(byte[] arrBTmp) throws Exception {
	//创建一个空的8位字节数组（默认值为0）
	byte[] arrB = new byte[8];
	//将原始字节数组转换为8位
	for (int i = 0; i < arrBTmp.length && i < arrB.length; i++) {
		arrB[i] = arrBTmp[i];
	}
	//生成密钥
	Key key = new javax.crypto.spec.SecretKeySpec(arrB, "DES");
	return key;
}

private static String[] tokenizeToStringArray(String str, String delimiters) {
		return tokenizeToStringArray(str, delimiters, true, true);
}

private static String[] tokenizeToStringArray(
		String str, String delimiters, boolean trimTokens, boolean ignoreEmptyTokens) {

	java.util.StringTokenizer st = new java.util.StringTokenizer(str, delimiters);
	List tokens = new ArrayList();
	while (st.hasMoreTokens()) {
		String token = st.nextToken();
		if (trimTokens) {
			token = token.trim();
		}
		if (!ignoreEmptyTokens || token.length() > 0) {
			tokens.add(token);
		}
	}
	return toStringArray(tokens);
}

private static String[] toStringArray(Collection collection) {
		if (collection == null) {
			return null;
		}
		return (String[]) collection.toArray(new String[collection.size()]);
}

private static String replace(String inString, String oldPattern, String newPattern) {
		if (inString == null) {
			return null;
		}
		if (oldPattern == null || newPattern == null) {
			return inString;
		}

		StringBuffer sbuf = new StringBuffer();
		// output StringBuffer we'll build up
		int pos = 0; // our position in the old string
		int index = inString.indexOf(oldPattern);
		// the index of an occurrence we've found, or -1
		int patLen = oldPattern.length();
		while (index >= 0) {
			sbuf.append(inString.substring(pos, index));
			sbuf.append(newPattern);
			pos = index + patLen;
			index = inString.indexOf(oldPattern, pos);
		}
		sbuf.append(inString.substring(pos));

		// remember to append any characters to the right of a match
		return sbuf.toString();
	}
//Add by Mumu Lee at 20060627 end

String getLink(String openFlag,String link,String funcode,HttpSession session,HttpServletRequest request,String funcname)
{
		String workNo = (String)session.getAttribute("workNo");
		String workName = (String)session.getAttribute("workName");
		String orgName = (String)session.getAttribute("orgName");
		String deptCode = (String)session.getAttribute("deptCode");
		String powerCode = (String)session.getAttribute("powerCode");
		String powerRight = (String)session.getAttribute("powerRight");
		String orgCode = (String)session.getAttribute("orgCode");
		String workGroupId = (String)session.getAttribute("workGroupId");

		String ip = request.getServerName().trim();

		String query_str = "";
		try{
			if ( !workNo.trim().equals("") )
			        query_str +="?login_no="+workNo;
			if ( !workName.trim().equals("") )
			        query_str += "&login_name="+workName;
			if ( !orgCode.trim().equals("") )
			        query_str += "&org_code="+orgCode;
			if ( !deptCode.trim().equals("") )
			        query_str += "&dept_code="+deptCode;
			if ( !workGroupId.trim().equals("") )
			        query_str += "&work_group_id="+workGroupId;
			if ( !orgName.trim().equals("") )
			        query_str += "&org_name="+orgName;
		}catch(Exception ne){
		}

		String selfIPPort="http://"+request.getServerName()+":"+request.getServerPort();
		String sLink="";
		sLink=link;

		if ((sLink.equals("#"))||(sLink.length()<4)){
			return sLink;
		}else if( sLink.indexOf("chncard") != -1 ){
			ip = "http://"+"10.110.0.100"+":42000/";
			sLink = sLink.substring(sLink.indexOf("chncard")+8,sLink.length());
			if (sLink.indexOf("?") != -1 ){
				sLink = ip+sLink+"&"+query_str.substring(1,query_str.length());
			}else{
				sLink = ip+sLink+query_str;
			}
			sLink=ip+"ResMngSystem/page/resmng/common/chncardauth.jsp?"+sLink;
		}else if( sLink.indexOf("chnterm") != -1 ){
			ip = "http://"+"10.110.2.157"+":11000/";
			sLink= sLink.substring(sLink.indexOf("chnterm")+8,sLink.length());
			if (sLink.indexOf("?") != -1 ){
				sLink ="/AuthSend_chn.jsp?system_code=12345&targeturl="+ip+sLink+"&"+query_str.substring(1,query_str.length());
			}else{
				sLink ="/AuthSend_chn.jsp?system_code=12345&targeturl="+ip+sLink+query_str;
			}
		}else if( sLink.indexOf("jlnewsaleweb") != -1 ){
    //wanglei add 营销管理分发判断
			ip = "http://"+"10.110.0.100"+":49000/";
			sLink= sLink.substring(sLink.indexOf("jlnewsaleweb")+13,sLink.length());
			if (sLink.indexOf("?") != -1 ){
				sLink ="/AuthSend_newsale.jsp?system_code="+sLink+"&targeturl="+ip+sLink+"&"+query_str.substring(1,query_str.length());
			}else{
				sLink ="/AuthSend_newsale.jsp?system_code="+sLink+"&targeturl="+ip+sLink+query_str;
			}
		}else if( sLink.indexOf("parter") != -1 ){
			ip = "http://"+"10.110.0.100"+":45000/";
			sLink= sLink.substring(sLink.indexOf("parter")+7,sLink.length());
			if (sLink.indexOf("?") != -1 ){
				sLink ="/AuthSend_parter.jsp?system_code="+sLink+"&targeturl="+ip+sLink+"&"+query_str.substring(1,query_str.length());
			}else{
				sLink ="/AuthSend_parter.jsp?system_code="+sLink+"&targeturl="+ip+sLink+query_str;
			}
		}else if( sLink.indexOf("channel") != -1 ){

			//加密处理
			StringBuffer chnSb = new StringBuffer();
			int opCodeS = sLink.indexOf("[",0);
			int opCodeE = sLink.indexOf("]",0);
			String opCode = "null";
			if (opCodeE>opCodeS && opCodeS>0){
			        opCode = sLink.substring(opCodeS+1,opCodeE);
			        sLink=replace(sLink,"["+opCode+"]","");
			}
			String tmpE = funcode+",";
			tmpE = tmpE+funcname+",";
			tmpE = tmpE+workNo+",";
			tmpE = tmpE + workGroupId+",";
			tmpE = tmpE+request.getServerName();
			tmpE = tmpE+","+funcode;
			chnSb.append(sLink).append("&chnLee=").append(getHostE(tmpE));
			sLink = chnSb.toString();
			//加密处理结束

			ip = "http://10.110.2.229:8888/";
			sLink= sLink.substring(sLink.indexOf("channel")+8,sLink.length());
			if (sLink.indexOf("?") != -1 )
			{
				sLink =ip+sLink+"&"+query_str.substring(1,query_str.length());
			}else{
				sLink =ip+sLink+query_str;
			}

		}else if( sLink.indexOf("cardres") != -1 ){

			//加密处理
			StringBuffer chnSb = new StringBuffer();
			int opCodeS = sLink.indexOf("[",0);
			int opCodeE = sLink.indexOf("]",0);
			String opCode = "null";
			if (opCodeE>opCodeS && opCodeS>0){
			        opCode = sLink.substring(opCodeS+1,opCodeE);
			        sLink=replace(sLink,"["+opCode+"]","");
			}
			String tmpE = funcode+",";
			tmpE = tmpE+funcname+",";
			tmpE = tmpE+workNo+",";
			tmpE = tmpE + workGroupId+",";
			tmpE = tmpE+request.getServerName();
			tmpE = tmpE+","+funcode;
			chnSb.append(sLink).append("&chnLee=").append(getHostE(tmpE));
			sLink = chnSb.toString();
			//加密处理结束

			ip = "http://10.110.0.100:43000/";
			sLink= sLink.substring(sLink.indexOf("cardres")+8,sLink.length());
			if (sLink.indexOf("?") != -1 ){
				sLink =ip+sLink+"&"+query_str.substring(1,query_str.length());
			}else{
				sLink =ip+sLink+query_str;
			}
		}else if( sLink.indexOf("iCrmReport") != -1 ){  // add by yangxj 2009.04.30 NG_CRM统一报表

			//加密处理...
			StringBuffer chnSb = new StringBuffer();
			String tmpE = funcode+",";
			tmpE = tmpE+funcname+",";
			tmpE = tmpE+workNo+",";
			tmpE = tmpE + workGroupId+",";
			tmpE = tmpE+request.getServerName();
			tmpE = tmpE+","+funcode;
			chnSb.append(sLink).append("&chnLee=").append(getHostE(tmpE));
			sLink = chnSb.toString();
			//加密处理结束

			ip = "http://10.110.0.100:32000/" ;

			if (sLink.indexOf("?") != -1 ){
				sLink =ip+sLink+"&"+query_str.substring(1,query_str.length());
			}else{
				sLink =ip+sLink+query_str;
			}

		}else if( sLink.indexOf("chnnew") != -1 ){

			//加密处理...
			StringBuffer chnSb = new StringBuffer();
			String tmpE = funcode+",";
			tmpE = tmpE+funcname+",";
			tmpE = tmpE+workNo+",";
			tmpE = tmpE + workGroupId+",";
			tmpE = tmpE+request.getServerName();
			tmpE = tmpE+","+funcode;
			chnSb.append(sLink).append("&chnLee=").append(getHostE(tmpE));
			sLink = chnSb.toString();
			//加密处理结束


			ip = "http://10.110.0.100:46000/";
			sLink= sLink.substring(sLink.indexOf("chnnew")+7,sLink.length());
			if (sLink.indexOf("?") != -1 ){
				sLink =ip+sLink+"&"+query_str.substring(1,query_str.length());
			}else{
				sLink =ip+sLink+query_str;
			}

		}else if( sLink.indexOf("chninfo") != -1 ){  // add by liyan 2009.07.10

			//加密处理...
			StringBuffer chnSb = new StringBuffer();
			String tmpE = funcode+",";
			tmpE = tmpE+funcname+",";
			tmpE = tmpE+workNo+",";
			tmpE = tmpE + workGroupId+",";
			tmpE = tmpE+request.getServerName();
			tmpE = tmpE+","+funcode;
			chnSb.append(sLink).append("&chnLee=").append(getHostE(tmpE));
			sLink = chnSb.toString();
			//加密处理结束

			ip = "http://10.110.0.100:34000/" ;		// 测试环境
			sLink= sLink.substring(sLink.indexOf("chninfo")+8,sLink.length());
			if (sLink.indexOf("?") != -1 ){
				sLink =ip+sLink+"&"+query_str.substring(1,query_str.length());
			}else{
				sLink =ip+sLink+query_str;
			}
		}else if( sLink.indexOf("grporder") != -1 ){
			ip = "http://"+"172.16.9.37"+":16000/";
			sLink = sLink.substring(sLink.indexOf("grporder")+9,sLink.length());
			if (sLink.indexOf("?") != -1 ){
				sLink =ip+sLink+"&"+query_str.substring(1,query_str.length());
			}else{
				sLink =ip+sLink+query_str;
			}
		}else if( sLink.indexOf("oneboss") != -1 ){
			ip = "http://"+"10.110.2.224"+":7001/";
			sLink = sLink.substring(sLink.indexOf("oneboss")+8,sLink.length());

			if(powerCode!=null&& !powerCode.trim().equals("") ){
        	query_str +="&powerCode="+powerCode.trim();
      }

      if (powerRight!=null&& !powerRight.trim().equals("") ){
        	query_str +="&power_right="+powerRight.trim();
			}

			if (sLink.indexOf("?") != -1 )
				sLink = ip+sLink+"&"+query_str.substring(1,query_str.length());
			else
				sLink = ip+sLink+query_str;
		}else if(sLink.indexOf("callcenter") != -1 ){
			sLink = sLink.substring(sLink.indexOf("callcenter"),sLink.length());
			sLink = sLink+query_str;
			sLink = selfIPPort+"/"+sLink;
		}else{
				sLink=selfIPPort+"/page/"+sLink;
		}

	//打开方式 1.一级tab打开;2.二级tab打开;其他值为弹出方式
	if(openFlag.equals("1"))
	{
		return link;
	}else if(openFlag.equals("2"))
	{
		return link;
	}else
	{
			return sLink;
	}

}
%>
